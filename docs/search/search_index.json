{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"index.html","title":"Welcome to PyPeCT2S Documentation","text":""},{"location":"index.html#introduction","title":"Introduction","text":"<p>This work uses techniques and tools developed by the INSIGNEO Institute for the CT2S pipeline.</p> <p>The goal of this work is to automate the CT2S pipeline steps, to use them in a modern setting in a repeatable and user-friendly manner; with high adaptability and extensibility.</p> <p>Use of this tool has resulted in pipeline time reductions of up to 70 %.</p> <p>Scripts, methods, and work contained in this repository have been heavily based on works by  Dr Xinshan Li and  Dr Zainab Altai.</p> <p>Specific works of importance to this repository are: 1, 2, 3, 4</p>"},{"location":"index.html#contact","title":"Contact","text":"<p>If you have any questions, please contact the authors:</p> <p>George H. Allison (Email | LinkedIn),  Dr Xinshan Li (Email)</p> <p>If you have any additional queries regarding the CT2S pipeline, please contact the  INSIGNEO Institute.</p>"},{"location":"index.html#disclaimer","title":"Disclaimer","text":"<p>This software has been designed for research purposes only and has not been reviewed or approved by medical device  regulation bodies.</p> <p>This software is not to be used alone or in combination, for human beings for one or more of the following specific  medical purposes:</p> <ul> <li>diagnosis, prevention, monitoring, prediction, prognosis, treatment or alleviation of disease.</li> <li>diagnosis, monitoring, treatment, alleviation of, or compensation for, an injury or disability.</li> <li>investigation, replacement or modification of the anatomy or of a physiological or pathological process or state.</li> <li>providing information by means of in vitro examination of specimens derived from the human body, including organ, blood and tissue donations.</li> </ul> <p>Please note that this software is provided as is and without warranty. The authors are not responsible for any damage.</p> <p>Please ensure you have the correct permissions to run the software and that you have the correct licenses for the software you are using.</p> <p>Please keep in mind the limits of the software this GUI interfaces with, and the limits of the software itself. We cannot solve issues that arise from software we do not control. However, if you think there is an issue with the GUI, please raise an issue on the repository.</p>"},{"location":"index.html#feedback-and-development","title":"Feedback and Development","text":"<p>This software is in active development and will likely remain for the next few years. If you have any feedback,  please raise an issue or open a discussion on the repository.</p> <p>If you want to include your custom scripts, please raise an issue, open a discussion, or create a pull request  on the repository. Alternatively, you can contact the authors directly.</p> <p>Pull requests are welcome, but please ensure you have tested your changes before submitting.</p>"},{"location":"index.html#project-layout","title":"Project layout","text":"<pre><code>PyPeCT2S.py                     # The main run file.\nqt_gui.py                       # The main GUI file.\nrequirements.txt                # The requirements file for reproducing the environment.\nREADME.md                       # The project README.\nLICENSE                         # The project license.\n\ncore_libs/                      # The core libraries for the project.\n    __init__.py                 # The core library init file.\n    ansys_vars.py               # The ANSYS variables file.\n    gui_funcs.py                # The GUI functions file.\n    gui_vars.py                 # The GUI variables file.\n    ldmk_funcs.py               # The landmark functions file.\n    mat_vars.py                 # The material variables file.\n    stl_checks.py               # The STL checks file.\n    texteditredirector.py       # The text edit redirector file.\n    waitingspinnerwidget.py     # The waiting spinner widget file.\n\nfem_libs/                       # The FEM libraries to load for the gui.\n    __init__.py                 # init file to find all the FEM scripts on launch.\n    A_APDL_4B_fem.py            # ANSYS APDL 4-Point Bending FEM script\n\nmaterials_libs/                 # The material libraries to load for the gui.\n    __init__.py                 # init file to find all the material scripts on launch.\n    Bonemat_cli.py              # Runs the Bonemat CLI from python.\n\nmesh_libs/                      # The meshing libraries to load for the gui.\n    __init__.py                 # init file to find all the meshing scripts on launch.\n    A_IA_mesher.py              # ANSYS ICEM CFD and APDL meshing script.\n\npost_libs/                      # The post-processing libraries to load for the gui.\n    __init__.py                 # init file to find all the post-processing scripts on launch.\n    A_post.py                   # ANSYS post-processing functionality.\n\nbonemat/\n    ...                         # For placing personal Bonemat CLI executable.\n\ndocs/\n    index.md                    # The documentation homepage.\n    ...                         # Other markdown pages, images and other files.\n</code></pre>"},{"location":"index.html#references","title":"REFERENCES","text":"<p>1: Altai, Z., Viceconti, M., Offiah, A.C. et al. Investigating the mechanical response of paediatric  bone under bending and torsion using finite element analysis. Biomechanics and Modeling in Mechanobiology 17, 1001\u20131009  (2018). DOI</p> <p>2: Altai, Z., Muhammad, Q., Li, X. et al. The effect of boundary and loading conditions on patient  classification using finite element predicted risk of fracture. Clinical Biomechanics 68, 137\u2013143  (2019). DOI</p> <p>3: Li, X., Viceconti, M., Cohen, M.C. et al. Developing CT based computational models of pediatric  femurs. Journal of Biomechanics 48, 2034\u20132040  (2015). DOI</p> <p>4: Viceconti, M., Muhammad, Q., Bhattacharya, P. et al. Are CT-Based Finite Element Model Predictions  of Femoral Bone Strengthening Clinically Useful? Current Osteoporosis Reports 16, 216\u2013223  (2018). DOI</p>"},{"location":"changelog.html","title":"Changelog:","text":""},{"location":"changelog.html#100","title":"1.0.0","text":"<ul> <li>Initial release of the software.</li> <li>Includes the following features:</li> <li>Meshing with ANSYS ICEM CFD and APDL.</li> <li>Material application with Bonemat CLI.</li> <li>FEM script for 4-point bending in ANSYS APDL.</li> <li>Post-processing in ANSYS.</li> </ul>"},{"location":"customisation.html","title":"Customisation","text":"<p>This section discusses customising the program to suit your own needs. This includes creating your own scripts.</p> <p>Custom scripts can be created by anyone and used by inserting that script in the corresponding folder and  restarting the program.</p>"},{"location":"customisation.html#creating-custom-scripts","title":"Creating Custom Scripts","text":"<p>Custom scripts can be created for all tabs, but have two minimum requirements for functionality. A name from the  function <code>get_name()</code> and a GUI structure from the function <code>gui_elements()</code>.  This allows the program to switch tab elements dynamically as you load alternative scripts.</p> <p>See examples below:</p> <pre><code>def get_name():\n    return \"Display Name for your script\"\n</code></pre> <pre><code>def gui_elements():\n    gui_structure = {\n        'type': 'QVBoxLayout',  # Top-level layout\n        'items': [\n            {\n                'type': 'QHBoxLayout',  # Nested layout\n                'items': [\n                    {\n                        'type': 'QLabel',\n                        'text': 'FEM File Directory:'\n                    },\n                    {\n                        'type': 'QLineEdit',\n                        'placeholder': 'FEM File Directory Path'\n                        'obname': 'fem_file_dir',\n                    },\n                    {\n                        'type': 'QPushButton',\n                        'text': 'Browse',\n                        'slots': {'clicked': update_label}\n                    }\n                ]\n            },\n            {\n                'type': 'QHBoxLayout',  # Nested layout\n                'items': [\n                    {\n                        'type': 'QLabel',\n                        'text': 'Filename:'\n                    },\n                    {\n                        'type': 'QLineEdit',\n                        'placeholder': 'FEM File Name',\n                        'obname': 'fem_file_name',\n                        'slots': {\n                            'valueChanged': ('id', var_ins, lambda value: on_value_changed(value, var_ins, 'id'))\n                        }\n                    }\n                ]\n            },\n            {\n                'type': 'QHBoxLayout',  # Nested layout\n                'items': [\n                    {\n                        'type': 'QLabel',\n                        'text': 'Force (N):'\n                    },\n                    {\n                        'type':'QDoubleSpinBox',\n                        'min': 0,\n                        'max': 100000,\n                        'value': var_ins.F,\n                        'step': 1,\n                        'dp': 2,\n                        'slots': {\n                            'valueChanged': ('F', var_ins, lambda value: on_value_changed(value, var_ins, 'F'))\n                        }\n                    }\n                ]\n            },\n            {\n                'type': 'QPushButton',\n                'text': 'FEM Analysis',\n                'slots': {'clicked': update_label}\n            }\n        ]\n    }\n    return gui_structure\n</code></pre>"},{"location":"customisation.html#linking-ui-elements-to-functions","title":"Linking UI Elements to Functions","text":"<p>To link UI elements to functions, you can use the <code>slots</code> key in the <code>gui_elements()</code> function. This key is a dictionary of the signal and the function to call when the signal is emitted. Standard signals include <code>clicked</code>, <code>valueChanged</code>.</p>"},{"location":"customisation.html#clicked-signal","title":"Clicked Signal","text":"<p>The <code>clicked</code> signal is emitted when the button is clicked. This can be linked to a function to perform an action.</p> <pre><code>{\n    'type': 'QPushButton',\n    'text': 'FEM Analysis',\n    'slots': {'clicked': update_label}\n}\n</code></pre>"},{"location":"customisation.html#value-changed-signal","title":"Value Changed Signal","text":"<p>The <code>valueChanged</code> signal is emitted when the value of the element changes. This can be linked to a function to update a variable or perform an action.</p> <pre><code>{\n    'type':'QDoubleSpinBox',\n    'min': 0,\n    'max': 100000,\n    'value': var_ins.F,\n    'step': 1,\n    'dp': 2,\n    'slots': {\n        'valueChanged': ('F', var_ins, lambda value: on_value_changed(value, var_ins, 'F'))\n    }\n}\n</code></pre>"},{"location":"customisation.html#custom-clicked-functions","title":"Custom Clicked Functions","text":"<p>Some custom functions are defined to make certain actions easier like browsing for a file.</p> <pre><code>def browse_file_path(text, var_target, var_key, file_types, line_edit_name, parent_widget):\n    \"\"\"\n    Browse for a file path and update the variable and widget\n    :param text:  The dialog caption\n    :param var_target:  The target object containing the variable\n    :param var_key:  The key of the variable to update\n    :param file_types:  The file types to filter\n    :param line_edit_name:  The object name of the QLineEdit widget\n    :param parent_widget:  The parent widget containing the QLineEdit widget\n    \"\"\"\n    file_name, _ = QFileDialog.getOpenFileName(caption=text, filter=file_types)\n    if file_name:\n        try:\n            setattr(var_target, var_key, file_name)\n        except Exception as e:\n            print(f\"Error setting value: {e}\")\n        update_line_edit(file_name, line_edit_name, parent_widget)\n</code></pre>"},{"location":"customisation.html#parent-widget-and-object-name","title":"Parent Widget and Object Name","text":"<p>The <code>parent_widget</code> and <code>line_edit_name</code> are used to update the widget with the new value. This is done by finding the widget by name in the parent widget and updating the text.</p> <pre><code>def update_line_edit(text, line_edit_name, parent_widget):\n    \"\"\"\n    Update the text of a QLineEdit widget\n    :param text:  The new text to set\n    :param line_edit_name:  The object name of the QLineEdit widget\n    :param parent_widget:  The parent widget containing the QLineEdit widget\n    \"\"\"\n    line_edit = parent_widget.findChild(QLineEdit, line_edit_name)  # Find the QLineEdit widget\n    if isinstance(line_edit, QLineEdit):\n        try:\n            line_edit.setText(text)\n        except Exception as e:\n            print(f\"Error setting text: {e}\")\n    else:\n        print(f\"Expected a QLineEdit instance, got {type(line_edit)} instead.\")\n</code></pre> <p>It is important to note that the <code>parent_widget</code> is the top-level widget containing the widget you want to update. This is often the <code>QDialog</code> or <code>QMainWindow</code> instance. Make sure you are passing the correct parent widget. As using  <code>self</code> in the function will generally not work, <code>QCoreApplication.instance().activeWindow()</code> will only work when the window is focused.</p> <p>The <code>line_edit_name</code> is the object name of the widget you want to update. This is set in the <code>obname</code> key in the <code>gui_funcs.py</code> file in core_libs.</p>"},{"location":"customisation.html#custom-gui-build-function","title":"Custom GUI Build Function","text":"<p>The <code>create_gui_element()</code> function is a factory function to create GUI elements based on the provided info.  This function is used to create the GUI elements from the <code>gui_elements()</code> function. It is a switch statement that creates the appropriate widget based on the type provided. </p> <p>It is not exhaustive and can be expanded to include more widget types.</p> <pre><code>def create_gui_element(element_info, signal_slots=None):\n    \"\"\"\n    Factory function to create GUI elements based on the provided info.\n    \"\"\"\n    element_type = element_info.get('type')\n    match element_type:\n        case 'QLabel':\n            return QLabel(element_info.get('text', ''))\n        case 'QPushButton':\n            button = QPushButton(element_info.get('text', ''))\n            if signal_slots and 'clicked' in signal_slots:\n                button.clicked.connect(signal_slots['clicked'])\n            return button\n        case 'QLineEdit':\n            widget = QLineEdit()\n            widget.setObjectName(element_info.get('obname', ''))\n            widget.setPlaceholderText(element_info.get('placeholder', ''))\n            widget.setText(element_info.get('text', ''))\n            if signal_slots and 'valueChanged' in signal_slots:\n                var_name, var_inst, slot_func = signal_slots['valueChanged']\n                if hasattr(var_inst, var_name):\n                    widget.setText(getattr(var_inst, var_name))\n                widget.textChanged.connect(lambda value, vn=var_name, vi=var_inst: on_value_changed(value, vi, vn))\n            return widget\n        case 'QDoubleSpinBox':\n            widget = QDoubleSpinBox()\n            widget.setRange(element_info.get('min', 0.00), element_info.get('max', 100000.00))\n            widget.setValue(element_info.get('value', 0.00))\n            widget.setSingleStep(element_info.get('step', 1.00))\n            widget.setDecimals(element_info.get('dp', 2))\n            if signal_slots and 'valueChanged' in signal_slots:\n                var_name, var_inst, slot_func = signal_slots['valueChanged']\n                widget.valueChanged.connect(lambda value, vn=var_name, vi=var_inst: on_value_changed(value, vi, vn))\n            return widget\n        case 'QSpinBox':\n            widget = QSpinBox()\n            widget.setRange(element_info.get('min', 0), element_info.get('max', 100000))\n            widget.setValue(element_info.get('value', 0))\n            widget.setSingleStep(element_info.get('step', 1))\n            if signal_slots and 'valueChanged' in signal_slots:\n                var_name, var_inst, slot_func = signal_slots['valueChanged']\n                widget.valueChanged.connect(lambda value, vn=var_name, vi=var_inst: on_value_changed(value, vi, vn))\n            return widget\n        case 'QComboBox':\n            widget = QComboBox()\n            widget.setObjectName(element_info.get('obname', ''))\n            widget.addItem(element_info.get('placeholder', ''))\n            if signal_slots and 'valueChanged' in signal_slots:\n                var_name, var_inst, slot_func = signal_slots['valueChanged']\n                widget.currentIndexChanged.connect(lambda value, vn=var_name, vi=var_inst: on_value_changed(value, vi, vn))\n            return widget\n        case _:\n            return None\n</code></pre>"},{"location":"doc-lcns.html","title":"GNU GENERAL PUBLIC LICENSE","text":"<p>Version 3, 29 June 2007</p> <p>Copyright (C) 2007 Free Software Foundation, Inc. https://fsf.org/</p> <p>Everyone is permitted to copy and distribute verbatim copies of this license document, but changing it is not allowed.</p>"},{"location":"doc-lcns.html#preamble","title":"Preamble","text":"<p>The GNU General Public License is a free, copyleft license for software and other kinds of works.</p> <p>The licenses for most software and other practical works are designed to take away your freedom to share and change the works. By contrast, the GNU General Public License is intended to guarantee your freedom to share and change all versions of a program--to make sure it remains free software for all its users. We, the Free Software Foundation, use the GNU General Public License for most of our software; it applies also to any other work released this way by its authors. You can apply it to your programs, too.</p> <p>When we speak of free software, we are referring to freedom, not price. Our General Public Licenses are designed to make sure that you have the freedom to distribute copies of free software (and charge for them if you wish), that you receive source code or can get it if you want it, that you can change the software or use pieces of it in new free programs, and that you know you can do these things.</p> <p>To protect your rights, we need to prevent others from denying you these rights or asking you to surrender the rights. Therefore, you have certain responsibilities if you distribute copies of the software, or if you modify it: responsibilities to respect the freedom of others.</p> <p>For example, if you distribute copies of such a program, whether gratis or for a fee, you must pass on to the recipients the same freedoms that you received. You must make sure that they, too, receive or can get the source code. And you must show them these terms so they know their rights.</p> <p>Developers that use the GNU GPL protect your rights with two steps: (1) assert copyright on the software, and (2) offer you this License giving you legal permission to copy, distribute and/or modify it.</p> <p>For the developers' and authors' protection, the GPL clearly explains that there is no warranty for this free software. For both users' and authors' sake, the GPL requires that modified versions be marked as changed, so that their problems will not be attributed erroneously to authors of previous versions.</p> <p>Some devices are designed to deny users access to install or run modified versions of the software inside them, although the manufacturer can do so. This is fundamentally incompatible with the aim of protecting users' freedom to change the software. The systematic pattern of such abuse occurs in the area of products for individuals to use, which is precisely where it is most unacceptable. Therefore, we have designed this version of the GPL to prohibit the practice for those products. If such problems arise substantially in other domains, we stand ready to extend this provision to those domains in future versions of the GPL, as needed to protect the freedom of users.</p> <p>Finally, every program is threatened constantly by software patents. States should not allow patents to restrict development and use of software on general-purpose computers, but in those that do, we wish to avoid the special danger that patents applied to a free program could make it effectively proprietary. To prevent this, the GPL assures that patents cannot be used to render the program non-free.</p> <p>The precise terms and conditions for copying, distribution and modification follow.</p>"},{"location":"doc-lcns.html#terms-and-conditions","title":"TERMS AND CONDITIONS","text":""},{"location":"doc-lcns.html#0-definitions","title":"0. Definitions.","text":"<p>\"This License\" refers to version 3 of the GNU General Public License.</p> <p>\"Copyright\" also means copyright-like laws that apply to other kinds of works, such as semiconductor masks.</p> <p>\"The Program\" refers to any copyrightable work licensed under this License. Each licensee is addressed as \"you\". \"Licensees\" and \"recipients\" may be individuals or organizations.</p> <p>To \"modify\" a work means to copy from or adapt all or part of the work in a fashion requiring copyright permission, other than the making of an exact copy. The resulting work is called a \"modified version\" of the earlier work or a work \"based on\" the earlier work.</p> <p>A \"covered work\" means either the unmodified Program or a work based on the Program.</p> <p>To \"propagate\" a work means to do anything with it that, without permission, would make you directly or secondarily liable for infringement under applicable copyright law, except executing it on a computer or modifying a private copy. Propagation includes copying, distribution (with or without modification), making available to the public, and in some countries other activities as well.</p> <p>To \"convey\" a work means any kind of propagation that enables other parties to make or receive copies. Mere interaction with a user through a computer network, with no transfer of a copy, is not conveying.</p> <p>An interactive user interface displays \"Appropriate Legal Notices\" to the extent that it includes a convenient and prominently visible feature that (1) displays an appropriate copyright notice, and (2) tells the user that there is no warranty for the work (except to the extent that warranties are provided), that licensees may convey the work under this License, and how to view a copy of this License. If the interface presents a list of user commands or options, such as a menu, a prominent item in the list meets this criterion.</p>"},{"location":"doc-lcns.html#1-source-code","title":"1. Source Code.","text":"<p>The \"source code\" for a work means the preferred form of the work for making modifications to it. \"Object code\" means any non-source form of a work.</p> <p>A \"Standard Interface\" means an interface that either is an official standard defined by a recognized standards body, or, in the case of interfaces specified for a particular programming language, one that is widely used among developers working in that language.</p> <p>The \"System Libraries\" of an executable work include anything, other than the work as a whole, that (a) is included in the normal form of packaging a Major Component, but which is not part of that Major Component, and (b) serves only to enable use of the work with that Major Component, or to implement a Standard Interface for which an implementation is available to the public in source code form. A \"Major Component\", in this context, means a major essential component (kernel, window system, and so on) of the specific operating system (if any) on which the executable work runs, or a compiler used to produce the work, or an object code interpreter used to run it.</p> <p>The \"Corresponding Source\" for a work in object code form means all the source code needed to generate, install, and (for an executable work) run the object code and to modify the work, including scripts to control those activities. However, it does not include the work's System Libraries, or general-purpose tools or generally available free programs which are used unmodified in performing those activities but which are not part of the work. For example, Corresponding Source includes interface definition files associated with source files for the work, and the source code for shared libraries and dynamically linked subprograms that the work is specifically designed to require, such as by intimate data communication or control flow between those subprograms and other parts of the work.</p> <p>The Corresponding Source need not include anything that users can regenerate automatically from other parts of the Corresponding Source.</p> <p>The Corresponding Source for a work in source code form is that same work.</p>"},{"location":"doc-lcns.html#2-basic-permissions","title":"2. Basic Permissions.","text":"<p>All rights granted under this License are granted for the term of copyright on the Program, and are irrevocable provided the stated conditions are met. This License explicitly affirms your unlimited permission to run the unmodified Program. The output from running a covered work is covered by this License only if the output, given its content, constitutes a covered work. This License acknowledges your rights of fair use or other equivalent, as provided by copyright law.</p> <p>You may make, run and propagate covered works that you do not convey, without conditions so long as your license otherwise remains in force. You may convey covered works to others for the sole purpose of having them make modifications exclusively for you, or provide you with facilities for running those works, provided that you comply with the terms of this License in conveying all material for which you do not control copyright. Those thus making or running the covered works for you must do so exclusively on your behalf, under your direction and control, on terms that prohibit them from making any copies of your copyrighted material outside their relationship with you.</p> <p>Conveying under any other circumstances is permitted solely under the conditions stated below. Sublicensing is not allowed; section 10 makes it unnecessary.</p>"},{"location":"doc-lcns.html#3-protecting-users-legal-rights-from-anti-circumvention-law","title":"3. Protecting Users' Legal Rights From Anti-Circumvention Law.","text":"<p>No covered work shall be deemed part of an effective technological measure under any applicable law fulfilling obligations under article 11 of the WIPO copyright treaty adopted on 20 December 1996, or similar laws prohibiting or restricting circumvention of such measures.</p> <p>When you convey a covered work, you waive any legal power to forbid circumvention of technological measures to the extent such circumvention is effected by exercising rights under this License with respect to the covered work, and you disclaim any intention to limit operation or modification of the work as a means of enforcing, against the work's users, your or third parties' legal rights to forbid circumvention of technological measures.</p>"},{"location":"doc-lcns.html#4-conveying-verbatim-copies","title":"4. Conveying Verbatim Copies.","text":"<p>You may convey verbatim copies of the Program's source code as you receive it, in any medium, provided that you conspicuously and appropriately publish on each copy an appropriate copyright notice; keep intact all notices stating that this License and any non-permissive terms added in accord with section 7 apply to the code; keep intact all notices of the absence of any warranty; and give all recipients a copy of this License along with the Program.</p> <p>You may charge any price or no price for each copy that you convey, and you may offer support or warranty protection for a fee.</p>"},{"location":"doc-lcns.html#5-conveying-modified-source-versions","title":"5. Conveying Modified Source Versions.","text":"<p>You may convey a work based on the Program, or the modifications to produce it from the Program, in the form of source code under the terms of section 4, provided that you also meet all of these conditions:</p> <ul> <li>a) The work must carry prominent notices stating that you modified     it, and giving a relevant date.</li> <li>b) The work must carry prominent notices stating that it is     released under this License and any conditions added under     section 7. This requirement modifies the requirement in section 4     to \"keep intact all notices\".</li> <li>c) You must license the entire work, as a whole, under this     License to anyone who comes into possession of a copy. This     License will therefore apply, along with any applicable section 7     additional terms, to the whole of the work, and all its parts,     regardless of how they are packaged. This License gives no     permission to license the work in any other way, but it does not     invalidate such permission if you have separately received it.</li> <li>d) If the work has interactive user interfaces, each must display     Appropriate Legal Notices; however, if the Program has interactive     interfaces that do not display Appropriate Legal Notices, your     work need not make them do so.</li> </ul> <p>A compilation of a covered work with other separate and independent works, which are not by their nature extensions of the covered work, and which are not combined with it such as to form a larger program, in or on a volume of a storage or distribution medium, is called an \"aggregate\" if the compilation and its resulting copyright are not used to limit the access or legal rights of the compilation's users beyond what the individual works permit. Inclusion of a covered work in an aggregate does not cause this License to apply to the other parts of the aggregate.</p>"},{"location":"doc-lcns.html#6-conveying-non-source-forms","title":"6. Conveying Non-Source Forms.","text":"<p>You may convey a covered work in object code form under the terms of sections 4 and 5, provided that you also convey the machine-readable Corresponding Source under the terms of this License, in one of these ways:</p> <ul> <li>a) Convey the object code in, or embodied in, a physical product     (including a physical distribution medium), accompanied by the     Corresponding Source fixed on a durable physical medium     customarily used for software interchange.</li> <li>b) Convey the object code in, or embodied in, a physical product     (including a physical distribution medium), accompanied by a     written offer, valid for at least three years and valid for as     long as you offer spare parts or customer support for that product     model, to give anyone who possesses the object code either (1) a     copy of the Corresponding Source for all the software in the     product that is covered by this License, on a durable physical     medium customarily used for software interchange, for a price no     more than your reasonable cost of physically performing this     conveying of source, or (2) access to copy the Corresponding     Source from a network server at no charge.</li> <li>c) Convey individual copies of the object code with a copy of the     written offer to provide the Corresponding Source. This     alternative is allowed only occasionally and noncommercially, and     only if you received the object code with such an offer, in accord     with subsection 6b.</li> <li>d) Convey the object code by offering access from a designated     place (gratis or for a charge), and offer equivalent access to the     Corresponding Source in the same way through the same place at no     further charge. You need not require recipients to copy the     Corresponding Source along with the object code. If the place to     copy the object code is a network server, the Corresponding Source     may be on a different server (operated by you or a third party)     that supports equivalent copying facilities, provided you maintain     clear directions next to the object code saying where to find the     Corresponding Source. Regardless of what server hosts the     Corresponding Source, you remain obligated to ensure that it is     available for as long as needed to satisfy these requirements.</li> <li>e) Convey the object code using peer-to-peer transmission,     provided you inform other peers where the object code and     Corresponding Source of the work are being offered to the general     public at no charge under subsection 6d.</li> </ul> <p>A separable portion of the object code, whose source code is excluded from the Corresponding Source as a System Library, need not be included in conveying the object code work.</p> <p>A \"User Product\" is either (1) a \"consumer product\", which means any tangible personal property which is normally used for personal, family, or household purposes, or (2) anything designed or sold for incorporation into a dwelling. In determining whether a product is a consumer product, doubtful cases shall be resolved in favor of coverage. For a particular product received by a particular user, \"normally used\" refers to a typical or common use of that class of product, regardless of the status of the particular user or of the way in which the particular user actually uses, or expects or is expected to use, the product. A product is a consumer product regardless of whether the product has substantial commercial, industrial or non-consumer uses, unless such uses represent the only significant mode of use of the product.</p> <p>\"Installation Information\" for a User Product means any methods, procedures, authorization keys, or other information required to install and execute modified versions of a covered work in that User Product from a modified version of its Corresponding Source. The information must suffice to ensure that the continued functioning of the modified object code is in no case prevented or interfered with solely because modification has been made.</p> <p>If you convey an object code work under this section in, or with, or specifically for use in, a User Product, and the conveying occurs as part of a transaction in which the right of possession and use of the User Product is transferred to the recipient in perpetuity or for a fixed term (regardless of how the transaction is characterized), the Corresponding Source conveyed under this section must be accompanied by the Installation Information. But this requirement does not apply if neither you nor any third party retains the ability to install modified object code on the User Product (for example, the work has been installed in ROM).</p> <p>The requirement to provide Installation Information does not include a requirement to continue to provide support service, warranty, or updates for a work that has been modified or installed by the recipient, or for the User Product in which it has been modified or installed. Access to a network may be denied when the modification itself materially and adversely affects the operation of the network or violates the rules and protocols for communication across the network.</p> <p>Corresponding Source conveyed, and Installation Information provided, in accord with this section must be in a format that is publicly documented (and with an implementation available to the public in source code form), and must require no special password or key for unpacking, reading or copying.</p>"},{"location":"doc-lcns.html#7-additional-terms","title":"7. Additional Terms.","text":"<p>\"Additional permissions\" are terms that supplement the terms of this License by making exceptions from one or more of its conditions. Additional permissions that are applicable to the entire Program shall be treated as though they were included in this License, to the extent that they are valid under applicable law. If additional permissions apply only to part of the Program, that part may be used separately under those permissions, but the entire Program remains governed by this License without regard to the additional permissions.</p> <p>When you convey a copy of a covered work, you may at your option remove any additional permissions from that copy, or from any part of it. (Additional permissions may be written to require their own removal in certain cases when you modify the work.) You may place additional permissions on material, added by you to a covered work, for which you have or can give appropriate copyright permission.</p> <p>Notwithstanding any other provision of this License, for material you add to a covered work, you may (if authorized by the copyright holders of that material) supplement the terms of this License with terms:</p> <ul> <li>a) Disclaiming warranty or limiting liability differently from the     terms of sections 15 and 16 of this License; or</li> <li>b) Requiring preservation of specified reasonable legal notices or     author attributions in that material or in the Appropriate Legal     Notices displayed by works containing it; or</li> <li>c) Prohibiting misrepresentation of the origin of that material,     or requiring that modified versions of such material be marked in     reasonable ways as different from the original version; or</li> <li>d) Limiting the use for publicity purposes of names of licensors     or authors of the material; or</li> <li>e) Declining to grant rights under trademark law for use of some     trade names, trademarks, or service marks; or</li> <li>f) Requiring indemnification of licensors and authors of that     material by anyone who conveys the material (or modified versions     of it) with contractual assumptions of liability to the recipient,     for any liability that these contractual assumptions directly     impose on those licensors and authors.</li> </ul> <p>All other non-permissive additional terms are considered \"further restrictions\" within the meaning of section 10. If the Program as you received it, or any part of it, contains a notice stating that it is governed by this License along with a term that is a further restriction, you may remove that term. If a license document contains a further restriction but permits relicensing or conveying under this License, you may add to a covered work material governed by the terms of that license document, provided that the further restriction does not survive such relicensing or conveying.</p> <p>If you add terms to a covered work in accord with this section, you must place, in the relevant source files, a statement of the additional terms that apply to those files, or a notice indicating where to find the applicable terms.</p> <p>Additional terms, permissive or non-permissive, may be stated in the form of a separately written license, or stated as exceptions; the above requirements apply either way.</p>"},{"location":"doc-lcns.html#8-termination","title":"8. Termination.","text":"<p>You may not propagate or modify a covered work except as expressly provided under this License. Any attempt otherwise to propagate or modify it is void, and will automatically terminate your rights under this License (including any patent licenses granted under the third paragraph of section 11).</p> <p>However, if you cease all violation of this License, then your license from a particular copyright holder is reinstated (a) provisionally, unless and until the copyright holder explicitly and finally terminates your license, and (b) permanently, if the copyright holder fails to notify you of the violation by some reasonable means prior to 60 days after the cessation.</p> <p>Moreover, your license from a particular copyright holder is reinstated permanently if the copyright holder notifies you of the violation by some reasonable means, this is the first time you have received notice of violation of this License (for any work) from that copyright holder, and you cure the violation prior to 30 days after your receipt of the notice.</p> <p>Termination of your rights under this section does not terminate the licenses of parties who have received copies or rights from you under this License. If your rights have been terminated and not permanently reinstated, you do not qualify to receive new licenses for the same material under section 10.</p>"},{"location":"doc-lcns.html#9-acceptance-not-required-for-having-copies","title":"9. Acceptance Not Required for Having Copies.","text":"<p>You are not required to accept this License in order to receive or run a copy of the Program. Ancillary propagation of a covered work occurring solely as a consequence of using peer-to-peer transmission to receive a copy likewise does not require acceptance. However, nothing other than this License grants you permission to propagate or modify any covered work. These actions infringe copyright if you do not accept this License. Therefore, by modifying or propagating a covered work, you indicate your acceptance of this License to do so.</p>"},{"location":"doc-lcns.html#10-automatic-licensing-of-downstream-recipients","title":"10. Automatic Licensing of Downstream Recipients.","text":"<p>Each time you convey a covered work, the recipient automatically receives a license from the original licensors, to run, modify and propagate that work, subject to this License. You are not responsible for enforcing compliance by third parties with this License.</p> <p>An \"entity transaction\" is a transaction transferring control of an organization, or substantially all assets of one, or subdividing an organization, or merging organizations. If propagation of a covered work results from an entity transaction, each party to that transaction who receives a copy of the work also receives whatever licenses to the work the party's predecessor in interest had or could give under the previous paragraph, plus a right to possession of the Corresponding Source of the work from the predecessor in interest, if the predecessor has it or can get it with reasonable efforts.</p> <p>You may not impose any further restrictions on the exercise of the rights granted or affirmed under this License. For example, you may not impose a license fee, royalty, or other charge for exercise of rights granted under this License, and you may not initiate litigation (including a cross-claim or counterclaim in a lawsuit) alleging that any patent claim is infringed by making, using, selling, offering for sale, or importing the Program or any portion of it.</p>"},{"location":"doc-lcns.html#11-patents","title":"11. Patents.","text":"<p>A \"contributor\" is a copyright holder who authorizes use under this License of the Program or a work on which the Program is based. The work thus licensed is called the contributor's \"contributor version\".</p> <p>A contributor's \"essential patent claims\" are all patent claims owned or controlled by the contributor, whether already acquired or hereafter acquired, that would be infringed by some manner, permitted by this License, of making, using, or selling its contributor version, but do not include claims that would be infringed only as a consequence of further modification of the contributor version. For purposes of this definition, \"control\" includes the right to grant patent sublicenses in a manner consistent with the requirements of this License.</p> <p>Each contributor grants you a non-exclusive, worldwide, royalty-free patent license under the contributor's essential patent claims, to make, use, sell, offer for sale, import and otherwise run, modify and propagate the contents of its contributor version.</p> <p>In the following three paragraphs, a \"patent license\" is any express agreement or commitment, however denominated, not to enforce a patent (such as an express permission to practice a patent or covenant not to sue for patent infringement). To \"grant\" such a patent license to a party means to make such an agreement or commitment not to enforce a patent against the party.</p> <p>If you convey a covered work, knowingly relying on a patent license, and the Corresponding Source of the work is not available for anyone to copy, free of charge and under the terms of this License, through a publicly available network server or other readily accessible means, then you must either (1) cause the Corresponding Source to be so available, or (2) arrange to deprive yourself of the benefit of the patent license for this particular work, or (3) arrange, in a manner consistent with the requirements of this License, to extend the patent license to downstream recipients. \"Knowingly relying\" means you have actual knowledge that, but for the patent license, your conveying the covered work in a country, or your recipient's use of the covered work in a country, would infringe one or more identifiable patents in that country that you have reason to believe are valid.</p> <p>If, pursuant to or in connection with a single transaction or arrangement, you convey, or propagate by procuring conveyance of, a covered work, and grant a patent license to some of the parties receiving the covered work authorizing them to use, propagate, modify or convey a specific copy of the covered work, then the patent license you grant is automatically extended to all recipients of the covered work and works based on it.</p> <p>A patent license is \"discriminatory\" if it does not include within the scope of its coverage, prohibits the exercise of, or is conditioned on the non-exercise of one or more of the rights that are specifically granted under this License. You may not convey a covered work if you are a party to an arrangement with a third party that is in the business of distributing software, under which you make payment to the third party based on the extent of your activity of conveying the work, and under which the third party grants, to any of the parties who would receive the covered work from you, a discriminatory patent license (a) in connection with copies of the covered work conveyed by you (or copies made from those copies), or (b) primarily for and in connection with specific products or compilations that contain the covered work, unless you entered into that arrangement, or that patent license was granted, prior to 28 March 2007.</p> <p>Nothing in this License shall be construed as excluding or limiting any implied license or other defenses to infringement that may otherwise be available to you under applicable patent law.</p>"},{"location":"doc-lcns.html#12-no-surrender-of-others-freedom","title":"12. No Surrender of Others' Freedom.","text":"<p>If conditions are imposed on you (whether by court order, agreement or otherwise) that contradict the conditions of this License, they do not excuse you from the conditions of this License. If you cannot convey a covered work so as to satisfy simultaneously your obligations under this License and any other pertinent obligations, then as a consequence you may not convey it at all. For example, if you agree to terms that obligate you to collect a royalty for further conveying from those to whom you convey the Program, the only way you could satisfy both those terms and this License would be to refrain entirely from conveying the Program.</p>"},{"location":"doc-lcns.html#13-use-with-the-gnu-affero-general-public-license","title":"13. Use with the GNU Affero General Public License.","text":"<p>Notwithstanding any other provision of this License, you have permission to link or combine any covered work with a work licensed under version 3 of the GNU Affero General Public License into a single combined work, and to convey the resulting work. The terms of this License will continue to apply to the part which is the covered work, but the special requirements of the GNU Affero General Public License, section 13, concerning interaction through a network will apply to the combination as such.</p>"},{"location":"doc-lcns.html#14-revised-versions-of-this-license","title":"14. Revised Versions of this License.","text":"<p>The Free Software Foundation may publish revised and/or new versions of the GNU General Public License from time to time. Such new versions will be similar in spirit to the present version, but may differ in detail to address new problems or concerns.</p> <p>Each version is given a distinguishing version number. If the Program specifies that a certain numbered version of the GNU General Public License \"or any later version\" applies to it, you have the option of following the terms and conditions either of that numbered version or of any later version published by the Free Software Foundation. If the Program does not specify a version number of the GNU General Public License, you may choose any version ever published by the Free Software Foundation.</p> <p>If the Program specifies that a proxy can decide which future versions of the GNU General Public License can be used, that proxy's public statement of acceptance of a version permanently authorizes you to choose that version for the Program.</p> <p>Later license versions may give you additional or different permissions. However, no additional obligations are imposed on any author or copyright holder as a result of your choosing to follow a later version.</p>"},{"location":"doc-lcns.html#15-disclaimer-of-warranty","title":"15. Disclaimer of Warranty.","text":"<p>THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW. EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU. SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.</p>"},{"location":"doc-lcns.html#16-limitation-of-liability","title":"16. Limitation of Liability.","text":"<p>IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.</p>"},{"location":"doc-lcns.html#17-interpretation-of-sections-15-and-16","title":"17. Interpretation of Sections 15 and 16.","text":"<p>If the disclaimer of warranty and limitation of liability provided above cannot be given local legal effect according to their terms, reviewing courts shall apply local law that most closely approximates an absolute waiver of all civil liability in connection with the Program, unless a warranty or assumption of liability accompanies a copy of the Program in return for a fee.</p> <p>END OF TERMS AND CONDITIONS</p>"},{"location":"installation.html","title":"Installation and Requirements","text":""},{"location":"installation.html#external-software-requirements","title":"External Software Requirements","text":"<p>An ANSYS install is required to run ANSYS based scripts</p> <p>Make Sure you are connected to a licensing server before running.</p> <p>ANSYS scripts require a minimum ANSYS version (2021R2) to function correctly. 2023R2 and above is recommended, and the  systems have been tested on 2021R2 up.</p> <p>ANSYS software will need to be launched at least once before it can be used with the GUI.</p> <p>To use Bonemat features you must provide your own Bonemat CLI executable.  This can be placed in the <code>bonemat/</code> directory.</p> <p>You will need to have the rolling version of Bonemat available on your system and copy the <code>BonematCLI.exe</code>, this can be found in <code>C:\\Program Files\\BIC Software\\Bonemat\\bin\\BonematCLI.exe</code>.</p> <p>We will not distribute a copy of Bonemat with is software.</p>"},{"location":"installation.html#from-release","title":"From Release","text":""},{"location":"installation.html#windows","title":"Windows","text":"<ul> <li>Download the latest release from the releases page.</li> <li>Extract the contents of the zip file to a directory of your choice.</li> <li>Run the <code>PyPeCT2S.exe</code> file to start the software.</li> <li>If you are using ANSYS, make sure you have the software installed and licensed.</li> <li> <p>If you are using Bonemat, make sure you have the software installed and have copied the CLI.</p> </li> <li> <p>If you have additional scripts, you can place them in the appropriate directories in the appropriate directory  (e.g. <code>fem_libs/</code>, <code>mesh_libs/</code>). You will need to restart the software to see the changes.</p> </li> </ul>"},{"location":"installation.html#from-source","title":"From Source","text":"<ol> <li> <p>Clone the Repository:  </p> <ul> <li>Open a terminal or command prompt.</li> <li>Navigate to the directory where you want to clone the repository.</li> <li>Run the following command to clone the repository: <code>git clone https://github.com/HaivuUK/PyPeCT2S.git</code></li> </ul> </li> <li> <p>Change into the project directory:</p> <ul> <li><code>cd PyPeCT2S</code></li> </ul> </li> <li> <p>Set Up a Virtual Environment:    It is recommended to use a virtual environment to manage dependencies.</p> <ul> <li>Create a virtual environment:    <code>python -m venv venv</code><ul> <li>Activate the virtual environment:<ul> <li>On Windows: <code>venv\\Scripts\\activate</code>    On macOS/Linux: <code>source venv/bin/activate</code></li> </ul> </li> <li>Install the Required Packages:  </li> <li>Ensure you have pip installed and updated: <code>python -m pip install --upgrade pip</code></li> <li>Install the required packages from the requirements.txt file: <code>pip install -r requirements.txt</code></li> <li>Verify the Installation:</li> <li>Check that all required packages are installed correctly by running: <code>pip list</code></li> </ul> </li> </ul> </li> <li> <p>Additional Setup for External Software:  </p> <ul> <li>ANSYS:<ul> <li>Ensure ANSYS is installed and licensed.</li> <li>Make sure you are connected to a licensing server before running ANSYS scripts.</li> <li>ANSYS scripts require a minimum version of 2021R2. Version 2023R2 or above is recommended.</li> </ul> </li> <li>Bonemat:<ul> <li>Download and install the Bonemat CLI executable.</li> <li>Place the BonematCLI.exe in the bonemat/ directory.</li> <li>Ensure you have the rolling version of Bonemat available on your system.</li> </ul> </li> </ul> </li> </ol>"},{"location":"troubleshooting.html","title":"Troubleshooting","text":"<p>If you encounter any issues with the program, please try the following first:</p> <ul> <li>Ensure you have a licensed version of ANSYS available on your computer. You may require a VPN to be active.</li> <li>Ensure your version of ANSYS is 2021 or newer. ANSYS 2023R2 is the recommended version.</li> <li>Ensure you have launched both ANSYS ICEM and ANSYS APDL once before use.</li> <li>By default, all tabs except meshing are locked. If you require additional features contact the person who provided  the program to you.</li> </ul> <p>Issues are known to occur more frequently with managed IT systems, so please ensure you have the correct permissions to run the software.</p>"},{"location":"troubleshooting.html#meshing","title":"Meshing","text":"<p>If you're having trouble with Meshing failing, try the following:</p>"},{"location":"troubleshooting.html#ansys-apdl-fails","title":"ANSYS APDL Fails","text":"<p>One of the most common causes for ANSYS APDL to fail at the meshing step is actual due to an issue in the ICEM section.</p> <p>Things to check for:</p> <ul> <li>STL integrity - Make sure your STL file is correct, not corrupted and has no visible issues.</li> <li>Mesh errors - Make sure you have gone over your mesh carefully and there are no errors like holes or broken surfaces.</li> </ul>"},{"location":"troubleshooting.html#material-application","title":"Material Application","text":"<p>If you're having trouble with your material application, try the following:</p> <ul> <li>Due to the automation steps to operate Bonemat seamlessly, model rotation is passed to an operation prior to meshing.  If you need this, please either complete the Bonemat step manually or repeat meshing with the Bonemat rotation  option selected. (See the Checkboxes section for more information.)</li> </ul>"},{"location":"troubleshooting.html#finite-element-method","title":"Finite Element Method","text":""},{"location":"troubleshooting.html#landmarks","title":"Landmarks","text":"<p>If you're having trouble with landmarks, try the following:</p> <ul> <li>If you are not using paediatric femurs you must provide your own landmark files.<ul> <li>The current landmark system is designed for paediatric femurs only. </li> </ul> </li> <li>Ensure you have landmark files in the correct format, and they can be read by the program.</li> </ul>"},{"location":"troubleshooting.html#ansys-apdl","title":"ANSYS APDL","text":""},{"location":"troubleshooting.html#general","title":"General","text":"<p>If you're having trouble with ANSYS APDL, try the following:</p> <ul> <li>Ensure you have the correct version of ANSYS installed.</li> <li>Make sure you have launched ANSYS APDL at least once before using the program.</li> <li>Check for any syntax errors in your script.</li> <li>Ensure you have the correct permissions to run the software.</li> <li>Check which license you have and if its compatible with the core count you are trying to use.</li> </ul>"},{"location":"troubleshooting.html#custom-scripts","title":"Custom Scripts","text":""},{"location":"troubleshooting.html#general_1","title":"General","text":"<p>If you're having trouble with custom scripts, try the following:</p> <ul> <li>Ensure your script has the required functions: <code>get_name()</code> and <code>gui_elements()</code>.</li> <li>Check for any syntax errors in your script.</li> <li>Make sure the script is saved in the correct folder and the program has been restarted.</li> </ul>"},{"location":"troubleshooting.html#gui-crashes-freezes-or-errors-when-unfocused","title":"GUI Crashes, Freezes, or Errors when unfocused","text":"<p>If you're experiencing GUI crashes, freezes, or errors when the program is unfocused, try the following:</p> <ul> <li>Check you are using the correct parent_widget in your script. This can cause issues if not set correctly.</li> <li>Ensure you have the correct slots and signals set up in your script.</li> <li>Check for any infinite loops in your script.</li> </ul>"},{"location":"troubleshooting.html#issue-not-here","title":"Issue not here?","text":"<p>If you have tried the above and are still experiencing issues, please raise an issue on the repository. Or contact the person who provided the program to you or author directly. </p> <p>Contact.</p>"},{"location":"usage.html","title":"Usage","text":""},{"location":"usage.html#file-model-input-requirements","title":"File / Model / Input Requirements","text":"<p>You can start the process at any step by jumping to that tab.</p> <p>If you wish to start fresh you require the following files:</p> <ol> <li> <p>DICOM image scans contained in a <code>*.VTK</code> file.</p> <ul> <li>Bonemat presents some limitations on the size of VTK files it can process. Please be aware of this.</li> </ul> </li> <li> <p>Segmented 3D <code>*.STL</code> model of the bone. </p> <ul> <li>It is important you check the quality of segmentation, meshing will fail  if there are external floating elements in the model.</li> <li>The program will provide information about warnings or errors in the model. However, this is not exhaustive and  you should check the model yourself.</li> </ul> </li> <li> <p>Configuration file for material application, based on the specific CT scanner used.</p> <ul> <li>This is a <code>*.conf</code> file.</li> <li>If you do not have a configuration file, you can create one using Bonemat.</li> </ul> </li> </ol>"},{"location":"usage.html#running-the-software","title":"Running the Software","text":"<p>The software can be launched by running the <code>PyPeCT2S.exe</code> file from release or by running the <code>PyPeCT2S.py</code> file  from source.</p> <p>Once you have launched the software you can run as many scripts as you like and stop at any point as output files are saved at each step (e.g. you can run meshing and material application and stop before running the FEM script).</p>"},{"location":"usage.html#main-window","title":"Main Window","text":"<p>When the software is run, you will be presented with the main window which will look as follows.</p> <p> </p> <p>This window present two paths, four drop-down menus, four tabs, a core count selection, two check boxes, a log window, and a list of links.</p>"},{"location":"usage.html#required-fields","title":"Required Fields","text":"<p>There are two fields that should be filled in for all included scripts:</p> <ul> <li>STL Path: The path to the STL file.</li> <li>Save Path: The path to save the output files.</li> </ul> <p>These fields are used to process information required for certain functions to run such as rotation of the model, landmark determination, and key sizing of the entered bone.</p>"},{"location":"usage.html#drop-down-menus-and-tabs","title":"Drop-down Menus and Tabs","text":"<p>The four drop-down menus are used to select the script you wish to run.  The four tabs are used to navigate those scripts. The scripts in these dropdowns are populated from the corresponding libs directories in the program files and are determined on launch.</p> <p>The tabs and the default included scripts are discussed in detail in the following sections.</p> <ul> <li>Meshing Tab section for more information on the Meshing tab.</li> <li>Material Tab section for more information on the Material tab.</li> <li>FEM Tab section for more information on the FEM tab.</li> <li>Results Tab section for more information on the Results tab.</li> </ul>"},{"location":"usage.html#core-count","title":"Core Count","text":"<p>The core count selection is used to determine the number of cores to use when running the scripts. </p> <p>Important to note:</p> <ul> <li>This does not determine the number of cores used by the software itself.</li> <li>It is strongly recommended to have at least 4 cores available for the software to run correctly. </li> <li>It is possible you will experience errors if you do not have enough cores.</li> <li>Do not assign all the cores on your machine to the scripts, as this will likely cause the software to crash.</li> </ul>"},{"location":"usage.html#checkboxes","title":"Checkboxes","text":"<p>There are two checkboxes: </p> <ol> <li><code>Segmented with RAS Coordinate System</code>: This is used to indicate to the software that the model has been segmented  with the RAS coordinate system. And that it should rotate the model to the LPS coordinate system, so it can have material properties applied in Bonemat. If you need this on, keep it checked for all steps you run.<ul> <li>3D Slicer exports models in the LPS coordinate system.</li> <li>ITK Snap exports models in the RAS coordinate system.</li> </ul> </li> <li><code>Batch Mode</code>: This is used to indicate to the software that you wish to run the scripts in batch mode. This feature is not currently in the distributed version of the software. Please see the contact section if you require this feature.</li> </ol>"},{"location":"usage.html#log-window","title":"Log Window","text":"<p>The log window is used to display information about the scripts as they run. This can be used to check for errors or warnings that may have occurred during the script run.</p>"},{"location":"usage.html#links","title":"Links","text":"<p>The links are used to provide information about the software and the authors.</p> <p>If you require help the HELP link will take you to the documentation.</p>"},{"location":"usage.html#meshing-tab","title":"Meshing Tab","text":"<p>When selecting the default meshing script, you will be presented with the following window.</p> <p> </p> <p>The meshing tab is used to run the meshing script. This script will take the <code>*.STL</code> file and create a mesh for running  FEM simulations. The meshing script will output a <code>*.cdb</code> file which can be used in ANSYS. It is recommended to only use one core for this script as using multiple cores takes longer without much benefit.</p> <p>Once you are ready to mesh you can press the <code>Mesh STL File</code> button. This will start the meshing process and output the <code>*.cdb</code> file to the save path you have selected.</p> <p>Before the meshing starts the software will check the STL file for any errors. If anything is found it will present a  list of errors and warnings to you. If the meshing fails you should check these to see what may have caused the issue.</p>"},{"location":"usage.html#icem-path","title":"ICEM Path","text":"<p>Due to limitations with ICEM CFD, the meshing script requires a path to the ICEM CFD executable. To make this easier for the user the software will attempt to find the executable for you by checking standard paths when the <code>Auto Find</code> button is clicked. If it cannot find the executable, you will be told, and required to enter the path manually. This can be done through the <code>Browse</code> button.</p>"},{"location":"usage.html#meshing-options","title":"Meshing Options","text":"<p>The meshing parameters for this script are <code>Project Name</code> and <code>Max Element Size</code>.</p> <ol> <li><code>Project Name</code>: This is the name of the file that will be output from ICEM CFD and then APDL.</li> <li><code>Max Element Size</code>: This is the maximum element size for the mesh. This is used to determine the size of the elements.<ul> <li>The smaller the element size, the more elements there will be in the mesh.</li> <li>The larger the element size, the fewer elements there will be in the mesh.</li> <li>The element size should be determined based on the size of the bone and the resolution of the scan.</li> </ul> </li> </ol>"},{"location":"usage.html#material-tab","title":"Material Tab","text":"<p>When selecting the default material script, you will be presented with the following window.</p> <p> </p> <p>The material tab is used to run the material application script. This script utilises the command line interface for Bonemat to apply material properties to the mesh without needing to open the Bonemat GUI.</p> <p>STL Path is not required for this script, as the script will use the <code>*.cdb</code> file output from the meshing script. However, the Save Path is required to save the output <code>*.cdb</code> file.</p> <p>This script will take three files to apply the material properties to the mesh.  The files required are the <code>*.conf</code> file, the <code>*.cdb</code> file, and the <code>*.VTK</code> file. The script will output a <code>*.cdb</code> file  with the material properties applied.</p> <p>This file can then be used in the FEM script to run the simulation.</p>"},{"location":"usage.html#fem-tab","title":"FEM Tab","text":"<p>When selecting the default FEM script, you will be presented with the following window.</p> <p> </p> <p>The FEM tab is used to run the FEM script. This script will take the <code>*.cdb</code> file with material properties and run a  simulation in ANSYS APDL. The script will output as many <code>*.db</code> files as required with the results of the simulation. Additionally, the script can take previously prepared files saved as <code>*.db</code> files and run the simulation on those.</p> <p>The FEM script utilises automatic landmark determination to determine the orientation of the bone and the location of the femoral head. This is used to apply the boundary conditions to the bone. If you have landmark files you can use these instead. The program will not determine landmark points automatically if landmark files are present.</p> <p>Automatic landmark determination is specific to paediatric femur models, if you do not have a paediatric femur model  you should determine your landmarks yourself and make sure the files are accessible for the program. This is covered further in the Landmark Determination section.</p> <p>It is recommended to use multiple cores for this script as it can take a long time to run the simulation. 4 cores is  recommended if you have plenty available. 2 cores is a good reduction in time against 1 core.</p> <p>Once all parameters have been set you can press the <code>FEM Analysis</code> button to start the simulation.</p>"},{"location":"usage.html#files","title":"Files","text":"<p>The FEM script has two main inputs required:</p> <ol> <li><code>FEM File Directory</code>: This is the path to the folder where your <code>*.cdb</code> file(s) are stored.</li> <li><code>Filename</code>: This is the name of the file that will be used for the simulation, incase there are multiple files in  the directory.</li> </ol>"},{"location":"usage.html#parameters","title":"Parameters","text":"<p>The remaining fields are used to set the parameters that define the boundary conditions. These are:</p> <ul> <li><code>Force</code>: The force applied to the bone. Measured in Newtons.</li> <li><code>Angle Increment</code>: The angle increment for the simulation. This is used to determine the number of steps in  the simulation. Measured in degrees.</li> <li><code>Manual</code>: Specific orientation. 1 - Solves only one specific orientation, 2 - Solves all orientations.</li> <li><code>Percentage of Remaining Segment</code>: The percentage of the segment to apply force. Measured in percentage.</li> <li><code>Proption of mid-segment to apply force</code>: The proportion of the mid-segment to apply force. Measured in percentage.</li> </ul>"},{"location":"usage.html#results-tab","title":"Results Tab","text":"<p>When selecting the default results script, you will be presented with the following window.</p> <p> </p> <p>The results tab is used to view the results of the FEM simulation. This script has two different outputs that use different elements saved from the FEM script.</p> <ul> <li><code>Numerical Results Processing</code>: This script will take the <code>*.dat</code> files output from the FEM script and process them to provide numerical results and graphs showing failure and maximum 1<sup>st</sup> and 3<sup>rd</sup> principal strains  against defined failure limits.</li> <li><code>ANSYS Contour Plots</code>: This script will take the <code>*.db</code> files output from the FEM script and process them to provide contour plots of the results.</li> </ul> <p>The <code>Numerical Results Processing</code> script will output a <code>*.csv</code> file with the numerical results and a <code>*.png</code> file with the graphs. The <code>ANSYS Contour Plots</code> script will output a <code>*.png</code> file with the contour plots.</p>"},{"location":"usage.html#additional-features","title":"Additional Features","text":"<p>Below will be a list of additional features that are included in the software. But are not directly visible to users.</p>"},{"location":"usage.html#landmark-determination","title":"Landmark Determination","text":"<p>These extra features are used to determine the landmarks of the bone. This is used to determine the orientation of the bone and the location of the femoral head.</p> <p>These are specific to paediatric femur models, if you do not have a paediatric femur model you should determine your  landmarks yourself and make sure the files are accessible for the program.</p> <p>If landmark files are present the program will not determine landmark points automatically.</p> <p>Landmark files should be in the same working directory as the <code>*.cdb</code> file you are using in a folder called <code>landmarks</code>.</p> <p>Landmark files should be in a plain text format with the following structure:</p> <pre><code>x, y, z\n</code></pre> <p>or </p> <pre><code>x\ny\nz\n</code></pre> <p>There should be a file for each landmark point. The files should be named as follows:</p> <ul> <li><code>RPOss.txt</code>: The proximal point of the bone.</li> <li><code>RDOss.txt</code>: The distal point of the bone.</li> <li><code>RMShaft.txt</code>: The center of mass of the bone.</li> </ul>"},{"location":"usage.html#calculation-for-the-length-of-the-bone","title":"Calculation for the Length of the Bone","text":"<p>Purpose: Calculate the length of the bone by finding the maximum distance between vertices.</p> <p>Mathematical Operation:</p> <p>Let \\(( \\mathbf{v}_i )\\) be the vertices of the mesh.</p> <p>Find the farthest vertex \\(\\mathbf{v}_{\\text{far}}\\) from an arbitrary starting vertex \\(( \\mathbf{v}_0 )\\): </p> \\[ \\mathbf{v}_{\\text{far}} = \\arg\\max{\\mathbf{v}_i} |\\mathbf{v}_0 - \\mathbf{v}_i| \\] <p>Find the maximum distance from \\(\\mathbf{v}_{\\text{far}}\\): </p> \\[ \\text{max distance} = \\max{\\mathbf{v}_i} |\\mathbf{v}_{\\text{far}} - \\mathbf{v}_i| \\]"},{"location":"usage.html#extension-of-points-along-the-central-long-axis","title":"Extension of Points Along the Central Long Axis","text":"<p>Purpose: Extend the distal and proximal points along the central axis by a given percentage of the bone length.</p> <p>Mathematical Operation:</p> <p>Calculate the central axis vector: </p> \\[ \\mathbf{v}_{\\text{axis}} = \\mathbf{v}_{\\text{distal}} - \\mathbf{v}_{\\text{proximal}} \\] <p>Calculate the bone length \\(L\\): </p> \\[ L = \\text{bone length} \\] <p>Calculate the extension length: </p> \\[ L_{\\text{ext}} = L \\times \\left(\\frac{\\text{percentage}}{100}\\right) \\] <p>Normalize the central axis vector: </p> \\[ \\mathbf{d} = \\frac{\\mathbf{v}_{\\text{axis}}}{L} \\] <p>Extend the distal and proximal points: </p> \\[ \\mathbf{v}_{\\text{distal}} = \\mathbf{v}_{\\text{distal}} + \\mathbf{d} \\times L_{\\text{ext}} \\] \\[ \\mathbf{v}_{\\text{proximal}} = \\mathbf{v}_{\\text{proximal}} - \\mathbf{d} \\times L_{\\text{ext}} \\]"},{"location":"usage.html#estimate-the-femoral-head-location","title":"Estimate the Femoral Head Location","text":"<p>Purpose: Estimate the location of the femoral head based on the proximal, distal, and center of mass points.</p> <p>Mathematical Operation:</p> <p>Calculate the shaft axis: </p> \\[ \\mathbf{v}_{\\text{shaft}} = \\mathbf{v}_{\\text{proximal}} - \\mathbf{v}_{\\text{distal}} \\] <p>Calculate the vector to the center of mass: </p> \\[ \\mathbf{v}_{\\text{com}} = \\mathbf{v}_{\\text{com}} - \\mathbf{v}_{\\text{proximal}} \\] <p>Estimate the distance to the femoral head: </p> \\[ d_{\\text{head}} = |\\mathbf{v}_{\\text{shaft}}| \\times \\left(\\frac{\\text{percentage}}{100}\\right) \\] <p>Calculate a perpendicular vector: </p> \\[ \\mathbf{v}_{\\perp} = \\mathbf{v}_{\\text{shaft}} \\times \\mathbf{v}_{\\text{com}} \\] <p>Calculate the direction to the femoral head: </p> \\[ \\mathbf{v}_{\\text{head_dir}} = \\mathbf{v}_{\\perp} \\times \\mathbf{v}_{\\text{shaft}} \\] \\[ \\mathbf{v}_{\\text{head_dir_norm}} = \\frac{\\mathbf{v}_{\\text{head_dir}}}{|\\mathbf{v}_{\\text{head_dir}}|} \\] <p>Estimate the femoral head location: </p> \\[ \\mathbf{v}_{\\text{head}} = \\mathbf{v}_{\\text{proximal}} - \\mathbf{v}_{\\text{head_dir_norm}} \\times d{_\\text{head}} \\]"},{"location":"usage.html#find-the-long-shaft-axis-of-the-bone","title":"Find the Long Shaft Axis of the Bone","text":"<p>Purpose: Find the long shaft axis of the bone and estimate the femoral head location.</p> <p>Mathematical Operation: Calculate the center of mass: </p> \\[ \\mathbf{v}_{\\text{com}} = \\frac{1}{N} \\sum{i=1}^{N} \\mathbf{v}_i \\] <p>Calculate the covariance matrix: </p> \\[ \\mathbf{C} = \\frac{1}{N-1} \\sum_{i=1}^{N} (\\mathbf{v}_i - \\mathbf{v}_{\\text{com}})(\\mathbf{v}_i - \\mathbf{v}_{\\text{com}})^T \\] <p>Calculate the principal axes (eigenvectors): </p> \\[ \\mathbf{C} \\mathbf{e}_i = \\lambda_i \\mathbf{e}_i \\] <p>The shaft axis is the eigenvector with the largest eigenvalue: </p> \\[ \\mathbf{v}_{\\text{shaft}} = \\mathbf{e}{max}(\\lambda) \\] <p>Project vertices onto the shaft axis: </p> \\[ \\mathbf{p}_i = (\\mathbf{v}_i - \\mathbf{v}_{\\text{com}}) \\cdot \\mathbf{v}_{\\text{shaft}} \\] <p>Find the proximal and distal points: </p> \\[ \\mathbf{v}_{\\text{proximal}} = \\mathbf{v}_{min}(\\mathbf{p}_i) \\] \\[ \\mathbf{v}_{\\text{distal}} = \\mathbf{v}_{max}(\\mathbf{p}_i) \\] <p>Estimate the femoral head location and extend points along the central axis as described above.</p>"},{"location":"usage.html#stl-checks","title":"STL Checks","text":"<p>To try and ensure the quality of the STL file, the software will run a series of checks on the file before running the meshing script. These checks are not exhaustive, and you should check the file yourself. The checks are as follows:</p>"},{"location":"usage.html#check-non-manifold-edges","title":"Check Non-manifold edges","text":"<p>Purpose: Checks for edges shared by more than two faces, indicating non-manifold edges.  </p> <p>Description: This function iterates through all the faces of the STL mesh and counts the occurrences of each edge.  Edges shared by more than two faces are considered non-manifold.  </p>"},{"location":"usage.html#check-multiple-bodies","title":"Check Multiple Bodies","text":"<p>Purpose: Checks for multiple bodies in the STL file by identifying unconnected components.  </p> <p>Description: This function uses a depth-first search (DFS) algorithm to identify unconnected components in the mesh.  Each unconnected component is considered a separate body.  </p>"},{"location":"usage.html#check_non_uniform_scaling","title":"check_non_uniform_scaling","text":"<p>Purpose: Checks for non-uniform scaling in the STL mesh.</p> <p>Description: This function calculates the bounding box of the mesh and checks if the dimensions  are uniformly scaled. Non-uniform scaling is detected if the dimensions are not proportional.  </p>"},{"location":"usage.html#check-for-faces-with-zero-area","title":"Check for Faces with Zero Area","text":"<p>Purpose: Checks for degenerate faces (faces with zero area).  </p> <p>Description: This function iterates through all the faces of the STL mesh and calculates the area of each face.  Faces with zero area are considered degenerate.  </p>"},{"location":"usage.html#check-for-inverted-normals","title":"Check for Inverted Normals","text":"<p>Purpose: Checks if normals are consistently oriented.  </p> <p>Description: This function calculates the center of the mesh and checks if the normals of the faces  generally point outward. A simple heuristic is used to determine the orientation of the normals.  </p>"},{"location":"usage.html#check-for-holes-in-the-mesh","title":"Check for Holes in the Mesh","text":"<p>Purpose: Checks for holes by ensuring each edge is shared by exactly two faces.  </p> <p>Description: This function iterates through all the faces of the STL mesh and counts the occurrences of each edge.  Edges shared by only one face are considered holes.  </p>"},{"location":"usage.html#check-for-duplicate-vertices-and-faces","title":"Check for Duplicate Vertices and Faces","text":"<p>Purpose: Checks for duplicate vertices and faces.</p> <p>Description: This function identifies and counts duplicate vertices and faces in the STL mesh.</p>"}]}